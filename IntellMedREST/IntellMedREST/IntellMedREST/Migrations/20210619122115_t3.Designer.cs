// <auto-generated />
using System;
using IntellMedREST;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace IntellMedREST.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210619122115_t3")]
    partial class t3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("IntellMedREST.Data.Diag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("AvgMultipl")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgQty")
                        .HasColumnType("numeric");

                    b.Property<string>("CodeUsl")
                        .HasColumnType("text");

                    b.Property<int?>("PersonID")
                        .HasColumnType("integer");

                    b.Property<string>("UslName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.ToTable("Diags");
                });

            modelBuilder.Entity("IntellMedREST.Data.Lech", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("AvgMultipl")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AvgQty")
                        .HasColumnType("numeric");

                    b.Property<string>("CodeUsl")
                        .HasColumnType("text");

                    b.Property<int?>("PersonID")
                        .HasColumnType("integer");

                    b.Property<string>("UslName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.ToTable("Lech");
                });

            modelBuilder.Entity("IntellMedREST.Data.Lek", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("AvgQty")
                        .HasColumnType("numeric");

                    b.Property<string>("Class")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("PersonID")
                        .HasColumnType("integer");

                    b.Property<int>("SKD")
                        .HasColumnType("integer");

                    b.Property<int>("SSD")
                        .HasColumnType("integer");

                    b.Property<string>("Uom")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.ToTable("Lek");
                });

            modelBuilder.Entity("IntellMedREST.Data.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DB")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DS")
                        .HasColumnType("text");

                    b.Property<string>("Fam")
                        .HasColumnType("text");

                    b.Property<string>("Im")
                        .HasColumnType("text");

                    b.Property<string>("Ot")
                        .HasColumnType("text");

                    b.Property<string>("Stad")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("IntellMedREST.Data.Diag", b =>
                {
                    b.HasOne("IntellMedREST.Data.Person", "Person")
                        .WithMany("Diags")
                        .HasForeignKey("PersonID");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("IntellMedREST.Data.Lech", b =>
                {
                    b.HasOne("IntellMedREST.Data.Person", "Person")
                        .WithMany("Lechs")
                        .HasForeignKey("PersonID");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("IntellMedREST.Data.Lek", b =>
                {
                    b.HasOne("IntellMedREST.Data.Person", "Person")
                        .WithMany("Leks")
                        .HasForeignKey("PersonID");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("IntellMedREST.Data.Person", b =>
                {
                    b.Navigation("Diags");

                    b.Navigation("Lechs");

                    b.Navigation("Leks");
                });
#pragma warning restore 612, 618
        }
    }
}
